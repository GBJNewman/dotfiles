" ##############################################################################
" Designed for vim 8+.  
" ##############################################################################
" ##############################################################################
" Plugins
" ##############################################################################

" autoload plug if not present
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

" start of plugins section
call plug#begin('~/.vim/plugged')

Plug 'https://github.com/tpope/vim-surround'

Plug 'https://github.com/tpope/vim-repeat'

Plug 'https://github.com/preservim/nerdtree'

Plug 'https://github.com/mattn/emmet-vim'

call plug#end()

" ##############################################################################
" NERDTree
" ##############################################################################

let NERDTreeStatusline='NERDTree - Press ? for help'

" Exit Vim if NERDTree is the only window remaining in the only tab.
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif

" ##############################################################################
" colorscheme / theme
" ##############################################################################
" turns on 24 bit colors
" there is a conflict with gruvbox transparancy when this is set
" set termguicolors

set t_Co=256
set background=dark
colorscheme darkness_gbjn

" ##############################################################################
" Custom Statusline
" ##############################################################################

" set statusline to always show, even if not more than one window open
set laststatus=2

" dictionary to convert mode() output to something more readable
let g:modedisplay={
    \ 'n'  : 'Normal',
    \ 'no' : 'Normal·Operator Pending',
    \ 'v'  : 'Visual',
    \ 'V'  : 'V·Line',
    \ '^V' : 'V·Block',
    \ 's'  : 'Select',
    \ 'S'  : 'S·Line',
    \ '^S' : 'S·Block',
    \ 'i'  : 'Insert',
    \ 'R'  : 'Replace',
    \ 'Rv' : 'V·Replace',
    \ 'c'  : 'Command',
    \ 'cv' : 'Vim Ex',
    \ 'ce' : 'Ex',
    \ 'r'  : 'Prompt',
    \ 'rm' : 'More',
    \ 'r?' : 'Confirm',
    \ '!'  : 'Shell',
    \ 't'  : 'Terminal'
    \}

" custom statusline
"set statusline=%F%M\ \|\|\ Filetype=%Y%=%{g:modedisplay[mode()]}%p%%\ %l,%v

" add full filepath of opened file to statusline
set statusline+=%F

" add filetype
set statusline+=\ \-\ filetype:%Y

" add a left right split point
set statusline+=%=

" add current mode
" set statusline+=\ mode:%{toupper(g:modedisplay[mode()])}

"add percentage through file in lines
" set statusline+=\ %p%%

" add line number
set statusline+=\ %l

" add column number
set statusline+=\,%v

" ##############################################################################
" settings
" ##############################################################################

" enable loading plugins for file types
filetype plugin on

" command history
set history=100

" This prevents truncated yanks, deletes, etc. (super important if using the vim
" buffers to paste stuff to a different file)
set viminfo='20,<1000,s1000

" makes it avoid most of the 'Hit Enter ...' type messages
set shortmess=aoOtTI

" stops vim from silently messing with files that it shouldn't
set nofixendofline

" search wraps from bottom of file back to the top
set wrapscan

" ascii friendly charactors for when you want to see invisible charactors, nbsp
" means nonbreaking space, it makes it so an auto line break won't happen.
set listchars=space:·,trail:•,nbsp:*,extends:>,precedes:<,tab:\|>
set list

" turns off automatic folding
set foldmethod=manual

" if some folds where folded this will open them
set nofoldenable

" Sets vi compatible mode to off (just use nvi for vi mode)
set nocompatible

" automatically indent new lines
set autoindent

" indenting for wrapped lines
set breakindent

" automatically write files when changing when multiple files are open
set autowrite

" shows the commands your using in the bottom tray
set showcmd

" Sets line numbers
set number

" sets the cursor line to highlight
set cursorline

" changes cursor line to only highlight numbers
set cursorlineopt=number

" disables relative line numbers
set norelativenumber

" Shows current mode in tray
set showmode

" no explaination yet
set tabstop=2

" disable visual bell
set t_vb=

" softtabstop, 
set softtabstop=2

" sets shiftwidth width (when you are in normal mode press >> or << and it will
" indent or go back this many spaces)
set shiftwidth=2

" Sets smart indenting
set smartindent

" sets smarttab, when smarttab is on it inserts blanks(which will be equal to whatever expand tab is
" set to) according to shiftwidth.
set smarttab

" mark trailing spaces as errors
" match IncSearch '\s\+$'

" Sets how wide inserted text can be (ie when horizontal lines will be wrapped)
set textwidth=80

" Sets a colored column in the vim terminal(for example you can set it to see where
" your textwidth ends) the +4 setting uses the textwidth then
" +4 to indicate where the column should go(it's +4 here and not +1 because line
" numbers are turned on, and they take up 3 columns)
" set colorcolumn=+4

" Sets tabs to equivelent amount of spaces
set expandtab

" set time out length in milliseconds(ie. for leaderkey timeout)
set timeout timeoutlen=2000

" turn on default spell checking
" set spell

" disable spellcapcheck(it checks for a capital as the next word to find the
" end of a sentence) see :h spellcapcheck
set spellcapcheck=

" risky, but keeps your files and folders cleaner
set nobackup
set noswapfile
set nowritebackup

" no sure what this does, neither does rwxrob. He thought it had something to
" do with tmux window titles or something. Leaving it in
" I believe this just sets the icon text for the window, only works on x11
" gui's. the icon text uses the file name unless you set iconstring to something
" non empty
set icon

" sets how much room the cursor has to move  up and down the screen
set scrolloff=8

" set highlight search hits
set hlsearch

" displays the match when your only partially through typing it
set incsearch

" linebreak, if on wraps can occur at whatever breakat is
" set linebreak

" turns bracket matching off
" let g:loaded_matchparen=1

" cursor quickly jumps to a matching bracket
" set showmatch

" faster scrolling
set ttyfast

" Sets up a way to do fuzzy finding
" **(as in star star) tells vim that when you look for a file search through every
" subdirectory, and search through every subdirectory of every subdirectory, see
" max cantor's presentation
set path+=**

" Display all matching files when we tab complete, apparently this can be
" configured several different ways
set wildmenu

" Set syntax on
syntax enable

" :h ins-completion for the auto complete man page

" ##############################################################################
" key maps
" ##############################################################################

" set mapleader
let mapleader=","

" nerdtree open/close toggle
nnoremap <LEADER>n :NERDTreeToggle<CR>

" remap split window navigation
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k

" map Y to act the same way as D and C (in that it does the action to the end of line)
nnoremap Y y$

" map H to move to the beginning of the line
nnoremap H ^

" map L to move to the end of the line
nnoremap L $

" mapping for function keys, the ! at the end before <CR> is to make it so you
" can toggle on and off
map <F1> :set number!<CR>
map <F2> :set relativenumber!<CR>

" add line without going into insert mode
nnoremap <leader>o o<esc>k

" edit vimrc from current session
nnoremap <leader>evim :e $HOME/.vim/vimrc<CR>

" source vimrc from current session
nnoremap <leader>svim :source $HOME/.vim/vimrc<CR>

" reads in html template
nnoremap <leader>html :-1read $HOME/.vim/snippets/html<CR>8j3wa

" ##############################################################################
" End
" ##############################################################################
