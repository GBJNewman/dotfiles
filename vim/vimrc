" ##############################################################

" See :h vimrc for information on vimrc files

" Tip for navigating the help file. ctrl-] will take you to the link under the
" cursor, and ctrl-o will take you back.

" ##############################################################
" ##############################################################

" Designed for vim 8+.  " This vimrc is based on rwxrob's vimrc,
" https://github.com/rwxrob/dot/blob/main/vim/.vimrc
" See https://youtu.be/3mRBUUTL2Uo for rwxrob's breakdown of his vimrc
 
" and also from Max Cantors presentation "how to do 90% of what plugins do
" with just vim"
" See  https://www.youtube.com/watch?v=XA2WjJbmmoM for Max's presentation

" ##############################################################
" ##############################################################

" Taken from rwxrobs video/s

" ##############################################################

" vim-tiny lacks 'eval',so this will check to see if tinyvim is being used, then this makes the vimrc work in tinyvim. see rwxrob video for more info
if has("eval")
	let skip_defaults_vim = 1
endif

" Sets vi compatible mode to off(use nvi for original vi editing)
set nocompatible

" automatically indent new lines
set autoindent

" indenting for wrapped lines
set breakindent

" automatically write files when changing when multiple files are open
set autowrite

" Activates line numbers
set number

" turn col and row position on in the bottom right
set ruler " see :h rulerformat for more

" sets it to show insert, replace or visual mode at the bottom when you're in them
set showmode

" need to add explanation to what this is
set tabstop=2

" disable visual bell
set t_vb=

" Not sure what this does, not sure it's needed
" it set mapleader? to something other than default, can be useful to prevent
" clashes with global and local plugins
let mapleader=","

set softtabstop=2

" sets shiftwidth width (when you are in normal mode press >> or << and it will
" indent or go back this many spaces)
set shiftwidth=2

" does the smart indenting, see :h smartindent
set smartindent

" sets smarttab, when smarttab is on it inserts blanks(whish wiil be equal to whatever expand tab is
" set to) according to shiftwidth. See :h smarttab for more info
set smarttab

" conditional to check if vim is version 8 or higher. see :h v:version
if v:version >= 800

	" stops vim from silently messing with files that it shouldn't. ie messes
	" with line endings(see rwxrobs video for more info)
	set nofixendofline

	" ascii friendly charactors for when you want to see invisible charactors
	set listchars=space:*,trail:*,nbsp:*,extends:>,precedes:<,tab:\|>
	" set list

	" turns of automatic folding
	set foldmethod=manual

	" if some folds where folded this will open them
  set nofoldenable

endif

" mark trailing spaces as errors(this is from rwxrobs, i dont know if i want
" it, so it will be commented out for now
" match IncSearch '\s\+$'

" Sets how wide inserted text can be (ie when lines will be wrapped)
set textwidth=80

" Sets a colored column in the vim terminal(for example you can set it to see where
" your textwidth ends) the +4 setting uses the textwidth then
" +4 to indicate where the column should go(it's +4 here and not +1 because line
" numbers are turned on, and they take up 3 columns)
" set colorcolumn=+4

" Sets the color of the colorcolumn
" :hi ColorColumn ctermbg=lightGreen guibg=lightgrey

" Sets tabs to equivelent amount of spaces
set expandtab

"set or disables relative line numbers
set norelativenumber

" makes an underline where ever the cursor is
" set cursorline

" make ~ (it represents blank lines, as in nothing in the file) effectively invisible
" highlight NonText guifg=bg

" turn on defaust spell checking
" set spell

" disable spellcapcheck(it checks for a capital as the next word to find the
" end of a sentence) see :h spellcapcheck
set spellcapcheck=

" riskier, but keeps your files and folders cleaner
set nobackup
set noswapfile
set nowritebackup

" no sure what this does, neither does rwxrob. He thought it had something to
" do with tmux window titles or something. Leaving it in
" I believe this just sets the icon text for the window, only works on x11
" gui's. the icon text uses the file name unless you set iconstring to something
" non empty
set icon


" sets how much room the cursor has to move within the screen, you can set it
" so it always is in the middle of the screen and the text is moving around,
" or it can be set to be able to move all the way up and down the screen
 set scrolloff=8

" set highlight search hits, can be annoying when they stay highlight after the
" search
set nohlsearch

" displays the match when your only partially through typing it
set incsearch
set linebreak

" makes it to avoid most of the 'Hit Enter ...' type messages
set shortmess=aoOtTI

" prevents truncated yanks, deletes, etc. (super important if im using the vim
" buffers to paste stuff to a different file, although probably a bad practise
" to do that)
set viminfo='20,<1000,s1000

" command history
set history=100

" sets bracket matching
" the if conditional for the eval is the vimtiny check(ie. are we using this
" vimrc with vimtiny
if has("eval")
  let g:loaded_matchparen=1
endif
set noshowmatch

" search wrap around file(ie. if you start your search half way down the file,
" it will go to the top and continue searching
set wrapscan

" rwxrob says plugins need this, also Max Cantor as well
" if has("syntax")
"   syntax enable
" endif
" I don't know why rob has the conditional, it seems others are just enabling
" in. leaving the above in, in case something happens in the future and i did
" need the conditional
syntax enable

" allow sensing the filetype, when you start editing a file vim will try to
" figure out what kind of file it is. see :h write-filetype-plugin to see how to
" write my own filetype plugins, also see :h write-plugin
filetype plugin on

" faster scrolling
set ttyfast

" high contrast background
" set background=dark
"
"this turns on 24 bit colors
set termguicolors   

" sets background to dark mode
set background=dark

" sets the colorscheme/theme
colorscheme elflord


" remappings, one to edit vimrc and one to reload the vimrc without having to
" restart the current session. nnoremap is for normal mode remapping, see :h
" mapmode-n
" nnoremap confe :e $HOME/.vimrc<CR>
" nnoremap confr :source $HOME/.vimrc<CR>

" this is rwxrobs custom ruler
" set ruf=%30(%=%#LineNr#%.50F\ [%{strlen(&ft)?&ft:'none'}]\ %l:%c\ %p%%%)

" Rob recommeds to use the Plug pluggin manager, as it doesn't mess around with
" you stuff, and it helps to keep everything clean and separated. see his video
" for more

" This is the autoload code taken from the plug git repo(to automatically
" download and install plug if it not present on the machine)
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  " the --sync flag blocks execution until the installer is finished
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" this conditional makes it so the plugins only load if Plug is present
" can find plug at github.com/junegunn/vim-plug
if filereadable(expand("~/.vim/autoload/plug.vim"))
  
  " path can be changed to where i put the plugins
  call plug#begin('~/autoload/plugplugins')
  
  " the plugins go here, list them with the plug command


  call plug#end()
endif

" maps Y to act the same way as D and C (in that it does the action to the end of line)
map Y y$

" mapping for function keys, the ! at the end before <CR> is to make it so you
" can turn the thing on and off
map <F1> :set number!<CR>
map <F2> :set relativenumber!<CR>
set pastetoggle=<F3>   " not sure why its done this way, i just copied rwxrob
map <F4> :set list!<CR>
map <F5> :set cursorline!<CR>
map <F6> :set nohlsearch!<CR>
map <F7> :set spell!<CR>
" map <F12> :set fdm=indent<CR>

" maps page down(originally ctrl-d) to same as lynx(ctrl-n)
" noremap <C-n> <C-d>

" maps page up(originally ctrl-b) to same as lynx(ctrl-p)
" noremap <C-p> <C-b>

" setups up other vim configs that can be used, see rwxrob video(around
" 3.20.00ish) and also see :h rtp
" set rtp^=~/.vimpersonal  "this is from rwxrobs vimrc
" set rtp^=~/.vimprivate  "this is from rwxrobs vimrc
" set rtp^=~/.vimwork  "this is from rwxrobs vimrc



" ##############################################################
" ##############################################################

" Stuff from Max Cantor's presentation 

" ##############################################################

" Sets up a way to do fuzzy finding
" **(as in star star) tells vim that when you look for a file search through every
" subdirectory, and search through every subdirectory of every subdirectory
set path+=**

" Display all matching files when we tab complete, apparently this can be
" configured several different ways
set wildmenu

" :h ins-completion for the auto complete man page

" shows the commands your using in the bottom tray thing
set showcmd


" ##############################################################
" ##############################################################

" set wildmode

" source ~/someFileSource
